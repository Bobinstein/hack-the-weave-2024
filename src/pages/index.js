// src/pages/index.js
import React, { useState, useContext, useEffect } from "react";
import GlobalContext from "../utils/globalProcess";
import { connectArweaveWallet, checkActiveAddress } from "../utils/arconnect";
import { fetchProcessTransactionsQuery } from "../utils/graphqlQueries";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { Inter } from "next/font/google";
import ProcessComponent from "../components/ProcessComponent";
import {
  result,
  results,
  message,
  spawn,
  monitor,
  unmonitor,
  dryrun,
} from "@permaweb/aoconnect";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const { globalState, setGlobalState } = useContext(GlobalContext);
  const [address, setAddress] = useState(null);

  async function connectArConnect() {
    const arweaveAddress = await connectArweaveWallet();
    setAddress(arweaveAddress);
  }

  useEffect(() => {
    async function init() {
      const activeAddress = await checkActiveAddress();
      if (activeAddress) {
        setAddress(activeAddress);
      }
    }

    init();
  }, []);

  useEffect(() => {
    async function fetchData() {
      if (address) {
        const query = fetchProcessTransactionsQuery(address);
        const response = await fetch("https://arweave.net/graphql", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ query }),
        });

        const { data } = await response.json();
        const processes = data.transactions.edges.map((edge) => edge.node);

        setGlobalState((prevState) => ({
          ...prevState,
          processes: processes,
        }));

        console.log(processes);
      }
    }

    fetchData().catch(console.error);
  }, [address, setGlobalState]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div style={{ display: "flex", flexWrap: "wrap" }}>
          {globalState.processes?.map((process) => (
            <ProcessComponent key={process.id} process={process} />
          ))}
        </div>
        {!address && (
          <button onClick={connectArConnect}>Connect Arweave Wallet</button>
        )}
        {address && <p>Connected with: {address}</p>}
      </main>
    </>
  );
}
